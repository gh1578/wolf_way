Zabbix基础组件LAMP安装

1、安装apache、database、php软件包
[root@server ~]# yum install httpd php mariadb mariadb-server –y
2、启动mariadb数据库并随开机启动
[root@server ~]# systemctl start mariadb
[root@server ~]# systemctl enable mariadb
Created symlink from /etc/systemd/system/multi-user.target.wants/mariadb.service to /usr/lib/systemd/system/mariadb.service.
3、Mariadb初始化配置
[root@server ~]# mysql_secure_installation

NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB
      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!

In order to log into MariaDB to secure it, we'll need the current
password for the root user.  If you've just installed MariaDB, and
you haven't set the root password yet, the password will be blank,
so you should just press enter here.

Enter current password for root (enter for none): 
OK, successfully used password, moving on...

Setting the root password ensures that nobody can log into the MariaDB
root user without the proper authorisation.

Set root password? [Y/n] y
New password: 
Re-enter new password: 
Password updated successfully!
Reloading privilege tables..
 ... Success!


By default, a MariaDB installation has an anonymous user, allowing anyone
to log into MariaDB without having to have a user account created for
them.  This is intended only for testing, and to make the installation
go a bit smoother.  You should remove them before moving into a
production environment.

Remove anonymous users? [Y/n] y
 ... Success!

Normally, root should only be allowed to connect from 'localhost'.  This
ensures that someone cannot guess at the root password from the network.

Disallow root login remotely? [Y/n] n
 ... skipping.

By default, MariaDB comes with a database named 'test' that anyone can
access.  This is also intended only for testing, and should be removed
before moving into a production environment.

Remove test database and access to it? [Y/n] y
 - Dropping test database...
 ... Success!
 - Removing privileges on test database...
 ... Success!

Reloading the privilege tables will ensure that all changes made so far
will take effect immediately.

Reload privilege tables now? [Y/n] y
 ... Success!

Cleaning up...

All done!  If you've completed all of the above steps, your MariaDB
installation should now be secure.

Thanks for using MariaDB!
4、启动Apache服务并随开机启动
[root@server ~]# systemctl start httpd
[root@server ~]# systemctl enable httpd
5、检查Apache服务是否正常运行
[root@server ~]# ps -ef | grep httpd
root       2312      1  0 16:25 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND
apache     2822   2312  0 16:47 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND
apache     2823   2312  0 16:47 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND
apache     2824   2312  0 16:47 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND
apache     2825   2312  0 16:47 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND
apache     2826   2312  0 16:47 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND
root       3530   2201  0 17:06 pts/0    00:00:00 grep --color=auto httpd
6、检查mariadb服务是否正常运行
[root@server ~]# ps -ef | grep mysql
mysql      3259      1  0 17:02 ?        00:00:00 /bin/sh /usr/bin/mysqld_safe --basedir=/usr
mysql      3422   3259  0 17:02 ?        00:00:00 /usr/libexec/mysqld --basedir=/usr --datadir=/var/lib/mysql --plugin-dir=/usr/lib64/mysql/plugin --log-error=/var/log/mariadb/mariadb.log --pid-file=/var/run/mariadb/mariadb.pid --socket=/var/lib/mysql/mysql.sock
root       3536   2201  0 17:07 pts/0    00:00:00 grep --color=auto mysql
